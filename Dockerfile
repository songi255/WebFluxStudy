# make container for use to build
# adoptopenjdk image is deprecated..
FROM adoptopenjdk/openjdk11:latest as builder
#FROM openjdk:11-jdk AS builder
WORKDIR application
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} application.jar
# extract layers with "extract" option
RUN java -Djarmode=layertools -jar application.jar extract

# make second container
FROM adoptopenjdk/openjdk11:latest
#FROM openjdk:11-jdk
WORKDIR application
# copy extracted layers to second container.
# docker's cache algorithm is applied to COPY command. each layer can be cached.
COPY --from=builer application/dependencies/ ./
#COPY --from=builer application/spring-boot-loader/ ./
# layer would not be generated by the version of dependencies.
# for example, you can make nextline to comment if snapshot dependecy doesn't exists and so layer didn't generated.
#COPY --from=builder application/snapshot-dependencies/ ./
#COPY --from=builder application/application/ ./
# not java -jar, but use Custom Launcher from Spring Boot.
# This Launcher doesn't unzip non-essencial JAR files. so Efficient.
ENTRYPOINT ["java", "org.springframework.boot.loader.JarLauncher"]